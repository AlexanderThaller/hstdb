# Copied from https://github.com/sagebind/naru/blob/8d29e81a0074b97aff703f42ffa8b5f44f543d05/.github/workflows/release-binaries.yml

name: release-binaries
on:
  release:
    types: [published]

jobs:
  linux-x86_64-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          # --no-default-features as sqlite3 doesn't compile with musl
          args: --release --target x86_64-unknown-linux-musl --no-default-features
          use-cross: true

      - name: Optimize and package binary
        run: |
          cd target/x86_64-unknown-linux-musl/release
          strip hstdb
          chmod +x hstdb
          tar -c hstdb | gzip > hstdb.tar.gz

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: hstdb-${{ github.event.release.tag-name }}-linux-x86_64-musl.tar.gz
          asset_path: target/x86_64-unknown-linux-musl/release/hstdb.tar.gz
          upload_url: ${{ github.event.release.upload_url }}
          asset_content_type: application/octet-stream

  linux-x86_64-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Optimize and package binary
        run: |
          cd target/release
          strip hstdb
          chmod +x hstdb
          tar -c hstdb | gzip > hstdb.tar.gz

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: hstdb-${{ github.event.release.tag-name }}-linux-x86_64-gnu.tar.gz
          asset_path: target/release/hstdb.tar.gz
          upload_url: ${{ github.event.release.upload_url }}
          asset_content_type: application/octet-stream

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
          use-cross: true

      - name: Optimize and package binary
        run: |
          cd target/release
          strip hstdb
          chmod +x hstdb
          mkdir dmg
          mv hstdb dmg/
          hdiutil create -fs HFS+ -srcfolder dmg -volname hstdb hstdb.dmg

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: hstdb-${{ github.event.release.tag-name }}-macos-x86_64.dmg
          asset_path: target/release/hstdb.dmg
          upload_url: ${{ github.event.release.upload_url }}
          asset_content_type: application/octet-stream

# Maybe someday
#  windows-x86_64:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          default: true
#
#      - name: Build binary
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#          args: --release
#          use-cross: true
#
#      - name: Upload binary
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          asset_name: hstdb-${{ github.event.release.tag-name }}-windows-x86_64.exe
#          asset_path: target/release/hstdb.exe
#          upload_url: ${{ github.event.release.upload_url }}
